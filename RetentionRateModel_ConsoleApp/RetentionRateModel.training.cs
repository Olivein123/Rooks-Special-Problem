﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace RetentionRateModel_ConsoleApp
{
    public partial class RetentionRateModel
    {
        /// <summary>
        /// Retrains model using the pipeline generated as part of the training process. For more information on how to load data, see aka.ms/loaddata.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <param name="trainData"></param>
        /// <returns></returns>
        public static ITransformer RetrainPipeline(MLContext mlContext, IDataView trainData)
        {
            var pipeline = BuildPipeline(mlContext);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"Address", @"Address"),new InputOutputColumnPair(@"Fund_Source", @"Fund_Source"),new InputOutputColumnPair(@"Fund_Type", @"Fund_Type"),new InputOutputColumnPair(@"HasJob", @"HasJob"),new InputOutputColumnPair(@"TotalParentsIncome", @"TotalParentsIncome"),new InputOutputColumnPair(@"NumberOfSiblings", @"NumberOfSiblings"),new InputOutputColumnPair(@"NumberOfDependentSiblings", @"NumberOfDependentSiblings"),new InputOutputColumnPair(@"Strand", @"Strand"),new InputOutputColumnPair(@"JoinedScienceHighSchool", @"JoinedScienceHighSchool"),new InputOutputColumnPair(@"WithHonors", @"WithHonors"),new InputOutputColumnPair(@"English Grade Range", @"English Grade Range"),new InputOutputColumnPair(@"Math Grade Range", @"Math Grade Range"),new InputOutputColumnPair(@"Science Grade Range", @"Science Grade Range"),new InputOutputColumnPair(@"GPA", @"GPA"),new InputOutputColumnPair(@"Course", @"Course"),new InputOutputColumnPair(@"Professor", @"Professor"),new InputOutputColumnPair(@"ModeOfDelivery", @"ModeOfDelivery"),new InputOutputColumnPair(@"HasScholarship", @"HasScholarship"),new InputOutputColumnPair(@"IsInCebu", @"IsInCebu"),new InputOutputColumnPair(@"CurrentStayingPlace", @"CurrentStayingPlace"),new InputOutputColumnPair(@"HasEnoughStudySpace", @"HasEnoughStudySpace"),new InputOutputColumnPair(@"ModeTransportGoingHome", @"ModeTransportGoingHome"),new InputOutputColumnPair(@"CommuteCountGoingHome", @"CommuteCountGoingHome"),new InputOutputColumnPair(@"CommuteDurationGoingHome", @"CommuteDurationGoingHome"),new InputOutputColumnPair(@"ModeTransportGoingSchool", @"ModeTransportGoingSchool"),new InputOutputColumnPair(@"CommuteCountGoingSchool", @"CommuteCountGoingSchool"),new InputOutputColumnPair(@"CommuteDurationGoingSchool", @"CommuteDurationGoingSchool"),new InputOutputColumnPair(@"HasDevice", @"HasDevice")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"Address",@"Fund_Source",@"Fund_Type",@"HasJob",@"TotalParentsIncome",@"NumberOfSiblings",@"NumberOfDependentSiblings",@"Strand",@"JoinedScienceHighSchool",@"WithHonors",@"English Grade Range",@"Math Grade Range",@"Science Grade Range",@"GPA",@"Course",@"Professor",@"ModeOfDelivery",@"HasScholarship",@"IsInCebu",@"CurrentStayingPlace",@"HasEnoughStudySpace",@"ModeTransportGoingHome",@"CommuteCountGoingHome",@"CommuteDurationGoingHome",@"ModeTransportGoingSchool",@"CommuteCountGoingSchool",@"CommuteDurationGoingSchool",@"HasDevice"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@"IsShifted",inputColumnName:@"IsShifted"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=59,NumberOfIterations=4,MinimumExampleCountPerLeaf=20,LearningRate=0.999999776672986,LabelColumnName=@"IsShifted",FeatureColumnName=@"Features",ExampleWeightColumnName=null,Booster=new GradientBooster.Options(){SubsampleFraction=0.999999776672986,FeatureFraction=0.99999999,L1Regularization=4.90215514694057E-10,L2Regularization=0.00010229807432426},MaximumBinCountPerFeature=559}))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@"PredictedLabel",inputColumnName:@"PredictedLabel"));

            return pipeline;
        }
    }
}
